{"version":3,"sources":["/Users/yangqianjun/Documents/project/sm2tsservice/__tests__/Doc.tsx","/Users/yangqianjun/Documents/project/sm2tsservice/README.mdx","/Users/yangqianjun/Documents/project/sm2tsservice/update.md"],"names":["IGuardConfig","React","Component","IYAPIConfig","ISwaggerParser","IJson2Service","IRequest","ISwaggerConfig","layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent","color"],"mappings":"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","file":"static/js/readme.eb258dfc.js","sourcesContent":["/**\n * @file: 生成文档用\n * @author: yangqianjun\n * @Date: 2020-01-14 16:28:13\n * @LastEditors: yangqianjun\n * @LastEditTime: 2020-01-14 17:06:29\n */\n\nimport React from 'react';\nimport { CoreOptions } from 'request';\nimport { GuardConfig, YAPIConfig, SwaggerParser, Json2Service } from '../src/consts';\n\nexport class IGuardConfig extends React.Component<GuardConfig> {}\nexport class IYAPIConfig extends React.Component<YAPIConfig> {}\nexport class ISwaggerParser extends React.Component<SwaggerParser> {}\nexport class IJson2Service extends React.Component<Json2Service> {}\nexport class IRequest extends React.Component<{ url?: string } & CoreOptions> {}\nexport class ISwaggerConfig extends React.Component<Json2Service['swaggerConfig']> {}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Props } from 'docz';\nimport {\n  IGuardConfig,\n  IYAPIConfig,\n  ISwaggerParser,\n  IJson2Service,\n  IRequest,\n  ISwaggerConfig\n} from './__tests__/Doc.tsx';\nimport Update from './update.md';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"npm-i--d-sm2tsservice\"\n    }}><inlineCode parentName=\"h1\">{`npm i -D sm2tsservice`}</inlineCode></h1>\n    <p>{`根据 swagger 或者 yapi mock json 生成 typescript service 代码`}</p>\n\n    <Update mdxType=\"Update\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"1-cli\"\n    }}>{`1. CLI`}</h2>\n    <h2 {...{\n      \"id\": \"11-配置文件\"\n    }}>{`1.1 配置文件`}</h2>\n    <p>{`edit `}<inlineCode parentName=\"p\">{`json2service.json`}</inlineCode>{`，也可用 `}<inlineCode parentName=\"p\">{`xxx.js`}</inlineCode>{`，然后配置 `}<inlineCode parentName=\"p\">{`-c xxx.js`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"111-cli-配置\"\n    }}>{`1.1.1 CLI 配置`}</h2>\n    <Props of={IJson2Service} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"112-swaggerparser\"\n    }}>{`1.1.2 `}<inlineCode parentName=\"h2\">{`swaggerParser`}</inlineCode></h2>\n    <Props of={ISwaggerParser} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"113-guardconfig\"\n    }}>{`1.1.3 `}<inlineCode parentName=\"h2\">{`guardConfig`}</inlineCode></h2>\n    <Props of={IGuardConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"124-yapiconfig\"\n    }}>{`1.2.4 `}<inlineCode parentName=\"h2\">{`yapiConfig`}</inlineCode></h2>\n    <Props of={IYAPIConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"124-requestconfig\"\n    }}>{`1.2.4 `}<inlineCode parentName=\"h2\">{`requestConfig`}</inlineCode></h2>\n    <Props of={IRequest} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"125-swaggerconfig\"\n    }}>{`1.2.5 `}<inlineCode parentName=\"h2\">{`swaggerConfig`}</inlineCode></h2>\n    <Props of={ISwaggerConfig} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"12-example\"\n    }}>{`1.2 Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"url\": \"./api.json\", // 文件路径\n  \"remoteUrl\": \"http://**\", // url\n  \"requestConfig\": {\n    \"url\": \"./api.json\" // 文件路径或url\n    // 以下所有 request 支持的参数\n    // headers?: Headers;\n    // baseUrl?: string;\n    // callback?: RequestCallback;\n    // jar?: CookieJar | boolean;\n    // formData?: { [key: string]: any };\n    // form?: { [key: string]: any } | string;\n    // auth?: AuthOptions;\n    // oauth?: OAuthOptions;\n    // aws?: AWSOptions;\n    // hawk?: HawkOptions;\n    // qs?: any;\n    // qsStringifyOptions?: any;\n    // qsParseOptions?: any;\n    // json?: any;\n    // jsonReviver?: (key: string, value: any) => any;\n    // jsonReplacer?: (key: string, value: any) => any;\n    // multipart?: RequestPart[] | Multipart;\n    // agent?: http.Agent | https.Agent;\n    // agentOptions?: http.AgentOptions | https.AgentOptions;\n    // agentClass?: any;\n    // forever?: any;\n    // host?: string;\n    // port?: number;\n    // method?: string;\n    // body?: any;\n    // family?: 4 | 6;\n    // followRedirect?: boolean | ((response: http.IncomingMessage) => boolean);\n    // followAllRedirects?: boolean;\n    // followOriginalHttpMethod?: boolean;\n    // maxRedirects?: number;\n    // removeRefererHeader?: boolean;\n    // encoding?: string | null;\n    // pool?: any;\n    // timeout?: number;\n    // localAddress?: string;\n    // proxy?: any;\n    // tunnel?: boolean;\n    // strictSSL?: boolean;\n    // rejectUnauthorized?: boolean;\n    // time?: boolean;\n    // gzip?: boolean;\n    // preambleCRLF?: boolean;\n    // postambleCRLF?: boolean;\n    // withCredentials?: boolean;\n    // key?: Buffer;\n    // cert?: Buffer;\n    // passphrase?: string;\n    // ca?: string | Buffer | string[] | Buffer[];\n    // har?: HttpArchiveRequest;\n    // useQuerystring?: boolean;\n  },\n  \"type\": \"yapi\",\n  \"yapiConfig\": {\n    \"required\": false,\n    \"bodyJsonRequired\": false,\n    \"categoryMap\": {\n      \"中文\": \"English\" // yapi 接口分类中英文映射\n    }\n  },\n  \"swaggerParser\": {\n    \"-o\": \"tmp/services\"\n  },\n  \"validateResponse\": false, // 是否生成校验逻辑\n  \"guardConfig\": {\n    // + strict 严格模式\n    //    - 校验 swagger tags【yapi 接口分类】是否是纯英文\n    //    - 方法名使用 http method + url 驼峰形式\n    //    - 新项目采用\n    // + safe 安全模式\n    //    - 方法名使用 http method + url 驼峰形式\n    //    - 老项目升级，不会校验 tags，会生成方法调用替换映射表\n    // + 默认\n    //    - http method + url => operationId 映射锁定\n    //    - 老项目维持现状\n    \"mode\": \"strict\",\n    // swagger 处理重复 operationId 逻辑有风险，因此需要锁定映射关系\n    \"methodUrl2OperationIdMap\": {\n      \"get /api/xxx/xxx\": \"operationId\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"13-生成-service-代码\"\n    }}>{`1.3 生成 service 代码`}</h2>\n    <h3 {...{\n      \"id\": \"命令行\"\n    }}>{`命令行`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  ./node_modules/.bin/sm2tsservice # 使用默认配置\n  ./node_modules/.bin/sm2tsservice -c config.json # 指定配置文件\n  ./node_modules/.bin/sm2tsservice --clear # 清空上次生成产物\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"npm-run\"\n    }}>{`npm run`}</h3>\n    <p>{`写入 `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`，通过 `}<inlineCode parentName=\"p\">{`npm run api`}</inlineCode>{` 使用`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"scripts\": {\n    \"api\": \"sm2tsservice --clear\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-ajax-接口\"\n    }}>{`2. ajax 接口`}</h2>\n    <p>{`实现 ajax 类【如果使用的 axios，且后端返回数据结构遵循 `}<inlineCode parentName=\"p\">{`{ code?:number;message?:string;result: any }`}</inlineCode>{`】`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/tkit-ajax\"\n      }}>{`详情 tkit-ajax`}</a></p>\n    <h2 {...{\n      \"id\": \"3-增量更新\"\n    }}>{`3. 增量更新`}</h2>\n    <p>{`自 @3.1.`}{`*`}{` 版本起，支持增量更新`}</p>\n    <h3 {...{\n      \"id\": \"流程\"\n    }}>{`流程`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`配置文件变更`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`url - 必须指向本地 swagger 文件【如文件不存在，在获取 remoteUrl 指定地址内容后，创建该文件`}</li>\n          <li parentName=\"ul\">{`remoteUrl - url 地址，即之前的 url`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`执行 CLI 生成代码`}</li>\n      <li parentName=\"ul\">{`CLI 对本地 swagger 文件和远程 swagger 文件进行 DIFF`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`有差异`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`打开浏览器，人工选择需要同步的差异，点保存`}</li>\n              <li parentName=\"ul\">{`CLI patch delta`}</li>\n            </ul></li>\n          <li parentName=\"ul\">{`无差异`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`直接下一步`}</li>\n            </ul></li>\n        </ul></li>\n      <li parentName=\"ul\">{`CLI 生成 service 代码`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"风险处置指南\"\n    }}>{`风险处置指南`}</h1>\n    <h2 {...{\n      \"id\": \"技术方案介绍\"\n    }}>{`技术方案介绍`}</h2>\n    <h3 {...{\n      \"id\": \"关键词\"\n    }}>{`关键词`}</h3>\n    <h4 {...{\n      \"id\": \"tags\"\n    }}>{`tags`}</h4>\n    <p>{`生成与 tags 一一对应的 service 文件，比如 `}<inlineCode parentName=\"p\">{`\"User\" => \"UserApi.ts\"`}</inlineCode>{` - 所以 tags 一旦设定不许更改`}</p>\n    <p>{`工具不能处理中文 - 所以要求 tags 必须为英文，所以 yapi 需要中英文映射`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  \"yapiConfig\": {\n    \"categoryMap\": {\n      \"中文\": \"English\"\n    }\n  }\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"operationid\"\n    }}>{`operationId`}</h4>\n    <p>{`每个接口全局唯一的操作 id，通过 `}<inlineCode parentName=\"p\">{`controller method name + Using + http method name`}</inlineCode>{`，出现重名会自增一 - 但顺序不可控，工具通过 operationId 生成接口调用代码，因此存在逻辑错乱的风险，协作方无法预测并告知变动`}</p>\n    <h4 {...{\n      \"id\": \"safe\"\n    }}>{`safe`}</h4>\n    <p>{`基于 `}<inlineCode parentName=\"p\">{`url + Using + http method`}</inlineCode>{` 生成 `}<inlineCode parentName=\"p\">{`operationId`}</inlineCode>{` - 唯一且可控，以上因素的变动，协作方有通知义务`}</p>\n    <h4 {...{\n      \"id\": \"strict\"\n    }}>{`strict`}</h4>\n    <p>{`在 `}<inlineCode parentName=\"p\">{`safe`}</inlineCode>{` 的基础上，添加对 `}<inlineCode parentName=\"p\">{`tags`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`definitions`}</inlineCode>{` 命名规范校验`}</p>\n    <h4 {...{\n      \"id\": \"dto\"\n    }}>{`DTO`}</h4>\n    <p>{`swagger 定义的数据结构，对应生成 typescript interface - 工具无法处理中文，因此 DTO 名字必须是英文`}</p>\n    <h4 {...{\n      \"id\": \"params\"\n    }}>{`params`}</h4>\n    <p>{`参数、变量名必须是小驼峰格式 - 及符合前端代码规范、合法的变量名、属性名`}</p>\n    <h3 {...{\n      \"id\": \"接口文档\"\n    }}>{`接口文档`}</h3>\n    <h4 {...{\n      \"id\": \"swagger\"\n    }}>{`swagger`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`  // 控制器\n  @Api(tags=\"English\", description=\"中文描述\") // tags 用以生成 service 分组，默认值为 any-controller 类名\n  class AnyController {\n    @ApiOperation(value=\"概述\", notes=\"详细描述\")\n    @ApiParam(name = \"gender\", value = \"性别\", required = true) // name 必须使用小驼峰\n    public doSomething() {} // 生成 operationId，比如 doSomethingUsingGet_1, doSomethingUsingGet_2\n  }\n\n  // DTO\n  @Data\n  @ApiModel(value=\"English\", description=\"用户基本信息\") // 必须手写 value，使用[a-zA-Z0-9]\n  public class UserVO {}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"mock\"\n    }}>{`mock`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  接口分类 => tags\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"处置指南\"\n    }}>{`处置指南`}</h2>\n    <h3 {...{\n      \"id\": \"升级工具\"\n    }}>{`升级工具`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm i -D @tkit/service // 公司内 3.0.7+\nnpm i -D sm2tsservice  // 公司外部 1.1.8+\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"处置方式\"\n    }}>{`处置方式`}</h3>\n    <h4 {...{\n      \"id\": \"公共逻辑\"\n    }}>{`公共逻辑`}</h4>\n    <h5 {...{\n      \"id\": \"参数格式校验\"\n    }}>{`参数格式校验`}</h5>\n    <p>{`工具要求新老项目参数必须是小驼峰英文格式，否则报错，生成失败`}</p>\n    <h4 {...{\n      \"id\": \"特殊逻辑\"\n    }}>{`特殊逻辑`}</h4>\n    <p>{`通过 `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` 控制工具的行为`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"guardConfig\": {\n    \"mode\": \"strict\" | \"safe\" | undefined\n  }\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"维持现状\"\n    }}>{`维持现状`}</h5>\n    <p>{`老项目，不配置 `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{`，重新生成 service 代码，如果检测到风险 operationId，则抛出错误生成失败，输出映射关系，请手动将提示添加到配置文件内，并提交到仓库，如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  \"guardConfig\": {\n    \"methodUrl2OperationIdMap\": {\n      {\n        \"get /api/xxx/xxx\": \"operationId\",\n        ...\n      }\n    }\n  }\n`}</code></pre>\n    <p>{`后续有任何变动的时候，工具会根据本地已有映射关系对 swagger 返回 `}<inlineCode parentName=\"p\">{`operationId`}</inlineCode>{` 进行校正，并对增删改做出检测提示，确保业务逻辑不受影响`}</p>\n    <font color=\"red\">警告</font>\n    <blockquote>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\">{`@tkit/service@3.0.7 sm2tservice@1.1.8 本身及以下，仅能确保初次给出的映射建议正确`}</li>\n        <li parentName=\"ul\">{`后续给出增量映射关系，务必人工确保新增映射 `}<inlineCode parentName=\"li\">{`operationId`}</inlineCode>{` 不与老映射 `}<inlineCode parentName=\"li\">{`operationId`}</inlineCode>{` 重复，校正为任一不重复有语义值即可，建议 `}<inlineCode parentName=\"li\">{`url + Using + http method`}</inlineCode>{` - 否则可能会报 java `}<inlineCode parentName=\"li\">{`overload`}</inlineCode>{` 错误，且后续无法升级到 `}<inlineCode parentName=\"li\">{`safe`}</inlineCode>{` 模式`}</li>\n        <li parentName=\"ul\">{`或请升级到 @tkit/service@3.0.8+ sm2tservice@1.1.9+`}</li>\n      </ul>\n    </blockquote>\n    <h5 {...{\n      \"id\": \"安全模式\"\n    }}>{`安全模式`}</h5>\n    <p>{`老项目，也可以配置 `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` 为 `}<inlineCode parentName=\"p\">{`\"safe\"`}</inlineCode>{`，则工具会基于 `}<inlineCode parentName=\"p\">{`url + Using + http method`}</inlineCode>{` 生成新的 `}<inlineCode parentName=\"p\">{`operationId`}</inlineCode>{` 以生成更安全和语义化的接口调用代码，但需满足`}</p>\n    <ul>\n      <li parentName=\"ul\">{`已保存 `}<inlineCode parentName=\"li\">{`methodUrl2OperationIdMap`}</inlineCode>{` 映射关系锁定`}</li>\n      <li parentName=\"ul\">{`人工更新 service 调用`}</li>\n    </ul>\n    <p>{`工具会自动生成 `}<inlineCode parentName=\"p\">{`旧接口调用`}</inlineCode>{` => `}<inlineCode parentName=\"p\">{`新接口调用`}</inlineCode>{` 映射关系，请自上而下依次全局替换即可，如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  \"getUserNameUsingGet_2\": \"getUserNameUsingGet\",\n  \"getUserNameUsingGet_1\": \"getNameUsingGet\",\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"严格模式\"\n    }}>{`严格模式`}</h5>\n    <p>{`新项目，一律配置 `}<inlineCode parentName=\"p\">{`mode`}</inlineCode>{` 为 `}<inlineCode parentName=\"p\">{`\"strict\"`}</inlineCode>{`，采用 `}<inlineCode parentName=\"p\">{`\"safe\"`}</inlineCode>{` 相同的 `}<inlineCode parentName=\"p\">{`operationId`}</inlineCode>{` 生成策略`}</p>\n    <ul>\n      <li parentName=\"ul\">{`要求 swagger 文档 `}<inlineCode parentName=\"li\">{`tags`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`definitions`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`params`}</inlineCode>{` 符合命名规范`}</li>\n      <li parentName=\"ul\">{`【暂时】仍要求先保存 `}<inlineCode parentName=\"li\">{`methodUrl2OperationIdMap`}</inlineCode>{` 映射关系锁定，再重新生成`}</li>\n      <li parentName=\"ul\">{`可直接忽略旧、新接口调用映射关系提示`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}